#Meta 
set("~/")
Konzo_Meta <- read.csv("./KinshasaControl_Konzo3_Meta_practice.csv")
View(Konzo_Meta)
names(Konzo_Meta)<-c("Sample","Name","Run","ID","Region","Status","Disease","Sample_ID","Collection_date","DNA_Concentration","Isolation_date","Elution","Age","Sex","Disease_Old","Intervention")
rownames(Konzo_meta)<-as.character(Konzo_meta[,1]) #The code above it worked but this one and the one below it did not.
META<-sample_data(Konzo_meta) 



#Goal: Create Phylyseq Class object for all Bacteria Species Identified in Kinshasa and Konzo3 samples #make it to the last one 
setwd("~/Dropbox/Konzo_Microbiome/Konzo1Konzo3/Konzo1_Konzo3_PostBracken/KinshasaControl_Konzo3_PostBracken")

#META
Konzo_meta <- read.csv("./KinshasaControl_Konzo3_Meta.csv")
names(Konzo_meta)<-c("Sample","Name","Run","ID","Region","Status","Disease","Sample_ID","Collection_date","DNA_Concentration","Isolation_date","Elution","Age","Sex","Disease_Old","Intervention")
rownames(Konzo_meta)<-as.character(Konzo_meta[,1])
META<-sample_data(Konzo_meta)

#SPECIES 

setwd("~/Dropbox/Konzo_Microbiome/Konzo1Konzo3/Konzo1_Konzo3_PostBracken/KinshasaControl_Konzo3_PostBracken/Bacteria/Bacteria_Species")

#OTU
Konzo_otu_s <- read.csv("./KinshasaControl_Konzo3_Bacteria_Species.ReadCounts.csv")
Konzo_species <- read.csv("./Kinshasa_Konzo3_species.csv")
Konzo_Otu_S <-as.matrix(unname(Konzo_otu_s[1:nrow(Konzo_otu_s),5:(ncol(Konzo_otu_s))]))

#Konzo_Otu_T_S <- t(Konzo_Otu_S)

rownames(Konzo_Otu_S)<-as.character( Konzo_otu_s[,1])
nam <-names(Konzo_otu_s)
colnames(Konzo_Otu_S)<-c(as.character(nam[5:length(nam)]))
OTU_S = otu_table(Konzo_Otu_S, taxa_are_rows = TRUE)

#TAX
Konzo_Species<-as.matrix(unname(Konzo_species[,2]))
rownames(Konzo_Species)<-as.character(unname(Konzo_Species[,1]))
colnames(Konzo_Species)<-"species"
TAX_S = tax_table(Konzo_Species)

#PhyloseqObject
KonzoData_S <-phyloseq(OTU_S, TAX_S, META) **** left off here 
#Set NAs to 0
KonzoData_S@otu_table[is.na(KonzoData_S@otu_table)] <- 0

#Probs can skip next step since the input file only contains species data so not require to grab/glom species taxa only
KonzoData.S <- tax_glom(KonzoData_S, taxrank = "species")

KonzoData.S@sam_data$Status <- factor(KonzoData.S@sam_data$Status, levels = c("Kinshasa", "Masimanimba", "Kahemba_Control_NonIntervention", "Kahemba_Konzo_NonIntervention", "Kahemba_Control_Intervention", "Kahemba_Konzo_Intervention"))

#Read Counts to Relative Abundance
KonzoData.S.tr <- transform_sample_counts(KonzoData.S, function(x) x / sum(x))
KonzoData.S.tr.log10 <- transform_sample_counts(KonzoData.S.tr, function(x) log10(x)) 

                                                
KonzoData.S.tr.status <- merge_samples(KonzoData.S.tr, KonzoData.S.tr@sam_data$Status)
KonzoData.S.tr.status <- transform_sample_counts(KonzoData.S.tr.status, function(x) x / 30)

otuD.S <- as.data.frame(t(otu_table(KonzoData.S)))
